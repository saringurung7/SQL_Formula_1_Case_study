Case study - Formula1

select * from seasons; -- 74
select * from status; -- 139	
select * from circuits; -- 77
select * from races; -- 1102
select * from drivers; -- 857
select * from constructors; -- 211
select * from constructor_results; -- 12170
select * from constructor_standings; -- 12941
select * from driver_standings; -- 33902
select * from lap_times; -- 538121
select * from pit_stops; -- 9634
select * from qualifying; -- 9575
select * from results; -- 25840
select * from sprint_results; -- 120

1. Identify the country which has produced the most F1 drivers.

select nationality, count(1) as no_of_drivers
from drivers
group by nationality
order by no_of_drivers desc;

2. Which country has produced the most no of F1 circuits

select country, count(1) as no_of_circuit
from circuits
group  by country
order by no_of_circuit desc
limit 1;

3. Which countries have produced exactly 5 constructors?

select nationality, count(1) as no_of_constructor
from constructors
group  by nationality
having count(1) = 5;

4. List down the no of races that have taken place each year

select year, count(1) no_of_races
from races
group by year
order by 2 desc;

5. Who is the youngest and oldest F1 driver?
	
select (forename||' '||surname) as F1_driver, dob
from drivers
where dob = (select min(dob) from drivers) 
		or dob = (select max(dob) from drivers) 
OR
	
select max(case when rn =1 then forename||' '||surname end) as oldest_driver
	   ,max(case when rn =cnt then forename||' '||surname end) as youngest_driver
from ( 
		select *
		,row_number() over(order by (dob)) as rn
		,count(*) over() as cnt
		from drivers) x
where rn =1 or rn=cnt;

6. List down the no of races that have taken place each year and mentioned which
was the first and the last race of each season.

select distinct year
   ,first_value(name) over(partition by year order by date) as first_race
   ,last_value(name) over(partition by year order by date
							range between unbounded preceding and unbounded following) as last_date
   ,count(1) over(partition by year) as no_of_races
from races
order by year desc;

7. Which circuit has hosted the most no of races. Display the circuit name, no of races,
city and country.

with cte as
    (select c.name as circuit_name, count(1) as no_of_races
	 ,rank() over(order by count(1) desc) as rnk
	 from races r
	 join circuits c on c.circuitid = r.circuitid
	 group by circuit_name
	)
select c.name, no_of_races, c.location as city, c.country 
from circuits c
join cte on cte.circuit_name = c.name
where rnk = 1

8. Display the following for 2022 season:
Year, Race_no, circuit name, driver name, driver race position, driver race points, flag to indicate if winner
, constructor name, constructor position, constructor points, , flag to indicate if constructor is winner
, race status of each driver, flag to indicate fastest lap for which driver, total no of pitstops by each driver

select r.year, r.raceid, c.name as circuit_name, (d.forename||' '||d.surname) as driver_name
, ds.position as driver_race_position, ds.points as driver_race_points
, case when ds.position = 1 then 'Winner' end driver_flag
, cons.name as constructor_name, cs.position as constructor_position, cs.points as constructor_points
, case when cs.position = 1 then 'Team Winner' end Team_flag
, s.status as race_status
, case when fst.fastestlap = res.fastestlaptime then 'Fastest lap time' end as fastest_lap_flag
,no_of_stops
from races r
join circuits c on c.circuitid = r.circuitid
join driver_standings ds on ds.raceid = r.raceid
join drivers d on d.driverid = ds.driverid
join constructor_standings cs on cs.raceid = r.raceid
join constructors cons on cons.constructorid = cs.constructorid
join results res on res.constructorid = cs.constructorid and res.raceid = r.raceid and res.driverid = ds.driverid
join status s on s.statusid = res.statusid
left join (select raceid , min(fastestlaptime) as fastestlap
			from results 
			group by raceid) fst on fst.raceid = r.raceid
left join(select driverid, raceid, count(1) as no_of_stops
			from pit_stops
			group by driverid, raceid) stp on stp.driverid = ds.driverid and stp.raceid = r.raceid
where r.year = 2022;

9. List down the names of all F1 champions and the no of times they have won it.

with cte as 
		(select r.year, (d.forename||' '||d.surname) as F1_driver
	     ,sum(res.points) as total_points
		,rank() over(partition by r.year order by sum(res.points) desc ) as rnk
		from races r
	 	join driver_standings ds on ds.raceid = r.raceid
		join drivers d on d.driverid = ds.driverid
		join results res on res.raceid = r.raceid and res.driverid = ds.driverid
		group by r.year, F1_driver, res.driverid
	    order by rnk),
		cte_rnk as
			(select * from cte where rnk = 1)
select F1_driver, count(1) as total_champion
from cte_rnk
group by F1_driver
order by total_champion desc;

10. Who has won the most constructor championships

with cte as 	
  		(select r.year, c.name as constructor_name
		,sum(res.points) as total_points
		,rank() over(partition by r.year order by sum(res.points) desc) as rnk
		from races r
		join constructor_standings cs on cs.raceid = r.raceid
		join constructors c on c.constructorid = cs.constructorid
		join results res on res.raceid = r.raceid and res.constructorid = cs.constructorid
		group by r.year, c.name, res.constructorid
		),
	cte_rnk as
		(select * from cte where rnk =1)
select constructor_name, count(1) as constructor_champion
from cte_rnk
group by constructor_name
order by 2 desc;

11. How many races has India hosted?

select c.country as country, count(1) as no_of_races
from races r
join circuits c on c.circuitid = r.circuitid
where country = 'India'
group by c.country;

12. Identify the driver who won the championship or was a runner-up on or after 2020. Also display the
team they belonged to.

with cte as 
		(select r.year as year, (d.forename||' '||d.surname) as F1_driver, c.name as constructor_name
		, sum(res.points) as total_points
		,rank() over(partition by year order by sum(res.points) desc) as rnk
		from races r
		join driver_standings ds on ds.raceid = r.raceid
		join drivers d on d.driverid = ds.driverid
		join results res on res.raceid = r.raceid and res.driverid = ds.driverid
		join constructors c on c.constructorid = res.constructorid
		where r.year >=2020
		group by r.year, F1_driver, res.driverid, constructor_name
		order by rnk)
select year, F1_driver
, case when rnk =1 then 'Winner' else 'Runner-up' end as flag
from cte 
where rnk <=2

13. Display the top 10 drivers with most wins

select F1_driver, no_of_wins
	from 	(select d.driverid,(d.forename||' '||d.surname) as F1_driver, count(1) as no_of_wins
			,rank() over(order by count(1) desc) as rnk
			from driver_standings ds
			join drivers d on d.driverid = ds.driverid
		    where position=1
			group by F1_driver, d.driverid) x
	where rnk <=10

14. Display the top 3 constructors of all time.

select constructor_name, no_of_wins
from (select c.constructorid, c.name as constructor_name, count(1) as no_of_wins 
	 ,rank() over(order by count(1) desc) as rnk
	 from constructor_standings cs
	 join constructors c on c.constructorid = cs.constructorid
	 where cs.position = 1
	 group by c.constructorid, constructor_name) x
where rnk <=3;








